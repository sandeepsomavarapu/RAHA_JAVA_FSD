JAVA FullStack:



	java developer
	db developer
	ui developer


Corejava
frameworks-->readymade
database(mysql),servlets,jsp
spring,springboot,hibernate,jpa(microservices casestudy)3-4 case studies 

html,css,js,ts,bs,react/angular

maven,git


					JAVA 
			JSE 	JEE     JME		

1)desktop/standalone app  notepad++,vlc,anti virus   corejava,awt,swings,applets   JSE
2)web app				 gmail,insta,amazon,flipkart	servlets,jsp,spring mvc,spring,....	JEE	
3)distributed app    webservices
4)mobile app         android   


1996

OOP-->communcation -->software-->machine



POP									OOPS
B,C,BCPL,COBOL,PHOTON,....			java,python,.net,c++,...OOPL


				security		encapsulation,abstraction
				performance		inheritance, polymorphisam

setup
why java?

	
		1)Platform Independent 
		2)garbage collection		garbage collector

	sun micro system//oracle corporation	microsoft
		java 								.net  platform dependent lanaguage

JDK
					machine1(sandeep)
						.net (windows)		WORA


	machine2(harshini)			machine3(rajeshwari)
	windows						 mac
	
	
	
	
	HelloWorld
	
	
	
	welcome to java
	
	
	
	53 keywords -->lowercase 
	56
	26
	
	
	.py,.c,.cpp,.html
	
	Welcome.java
	
	java -->1996--->oracle-->22
	
		james gosling==>OAK-->java coffee seed
		
		
Identifiers:=
============	
	any name in java will call it as identifier
		classname,varname,methodname,interface,label name....
		
		
		class Welcome@123
		{
		
		
		
		}
		
		a-z
		A-Z
		0-9
		_
		$
		
		
	Variables:
=============
		name of memory location
		
		sandeeptrainer	94949494
		
	syntax:
			datatype varname=value;
			
			
			age,contact,weight -->number
			name--->String ""
			78.43
			gender -->M/F
			true,false 
			
			PDT 		NPDT
		8				String,array,student,enum...	
			
		byte    1 byte		-128 to 127
		short	2 bytes		-32768 to 32767
		int		4 bytes		-2147483648 to 2147483647
		long	8 bytes	   9223372036854775808 - 9223372036854775807
							long age=25;// byte  age=25;  contact=9494348734
		float 	4 bytes		float result=23.4445329817912f;	
		double	8 bytes 	float result=23.4445329817912;
		
		char	2 bytes		'M'
		boolean 1 bit   true-1 false-0
		
		
		local variables-->inside the method 
			
			global variables-->outside the method inside the class
		
				instance and static 
				
Syntax
		static int countryCode=91;  //4 bytes
	if there is no static that is instance
Memory
		static variables will get memory only once at the time of class loading into JVM  execute(java classname)
		instance variables will get memory for every object creation
		
		CLASS 	A		OBJECT -->INSTANIATION,memory creation
		
		classname objname=new classname();
		A obj=new A();
		
Access
		instance variables we can access by using obj reference 
		static  variables we can access by using classname


Usage 
		if its common data like  countryname,statename,schoolname,collegename..	use static 	
		if its unique data like  mobileno,accno,aadhar no,empid,stuid,mailid.... 	instance
				
				
methods
========
	group of statements-->reusability



public static void main(String args[])
{


}

syntax:
=======
public/private/protected/default
accesmodifier static/instance returntype methodname(int a,int b,float c .... )
{



}


Editor:IDE(integrated development environment)

	eclipse,netbeans,intellji,vscode,myeclipse....


ARRAYS:
=======
		variable-->can hold one value
		
		int number=123;
			number=124;
	
		array-->group of values
	
		int numbers[]={12,1,244,421,52,77,324};//7 

		index-->0,1,2,3,4,5,6

		numbers[2]
	
		homogeneous
		
		int arr[]=new int[10];//fixed 

							//AIOE
				arr[0]=12;


Flow control statements:
=======================
if,else,switch,for,while,do-while....
boolean-->true,false 

















































